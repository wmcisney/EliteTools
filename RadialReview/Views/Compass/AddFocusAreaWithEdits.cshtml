@model RadialReview.Models.ViewModels.EditFocusAreaViewModel
@{
    var guid = Guid.NewGuid().ToString().Replace("-", "");
    var canEdit = !(bool)(Model.CanEdit == false);
    var modalClass = "col-xs-12";
    if (ViewBag.AnyL10sWithMilestones == true)
    {
        modalClass = "col-xs-7";
    }
}

<div class="@guid @classes">
	@*Html.HiddenFor(x => x.SelectedRecurrenceId)*@
	@Html.HiddenFor(x => x.Id)

	<div class="row row-background">
        <div class="modal-fa-panel-left">
            <div class="row">
                <div class="form-group">
                    <div class="col-sm-8">
                        <div class="form-group">
                            @Html.LabelFor(x => x.Title)
                            @Html.TextBoxFor(x => x.Title, new { @class = "form-control", placeholder = "Enter the Title", autocomplete = "off" }).Disable(!canEdit)
                        </div>
                    </div>
                </div>

            </div>

            <div class="form-group">
                <label>Details</label>
                @if (Model.IsCreate == true) {
                @Html.TextAreaFor(x => x.Detail, new { @class = "form-control verticalOnly", style = "min-height:144px;" })
				} else {
                <iframe src="/Rocks/Pad/@Model.Id" width="99.6%" style="min-height:200px;"></iframe>
				}
            </div>
            <div class=" @(Model.HideMeetings==true?"hidden":"")">

                <div class="row">
                    <div class="col-sm-12">
                        <div class="form-group">
                            <label>Attach to meeting(s):</label>
                            @Html.ListBoxFor(x => x.RecurrenceIds, Model.PossibleRecurrences, new { @class = "select-recur form-control", multiple = true }).DisableToReadonly()
                        </div>
                    </div>
                </div>
            </div>
        </div>
	</div>
</div>	
@if (Model.IsCreate != true) {
	<div class="pull-left" style="clear:both; position: absolute; bottom: -48px;">
		@if (Model.CanArchive == true) {
			<span class="btn btn-default btn-archive" onclick="@(guid)Archive()"><span class="icon fontastic-icon-archive"></span> Archive</span>
		} else {
			<span class="btn btn-default disabled" title="You do not have permission to archive this rock."><span class="icon fontastic-icon-archive"></span> Archive</span>
		}
	</div>
	<div style="clear:both"></div>
}

<style>
	
	.btn-archive {
		border: 1px solid #d9534f;
		color: #d9534f;
	}
	.btn-archive .icon{
		color: #d9534f;
		-webkit-transition: all .25s ease;
		-moz-transition: all .25s ease;
		-ms-transition: all .25s ease;
		-o-transition: all .25s ease;
		transition: all .25s ease;	
	}

	.btn-archive:hover{
		color: #fff !important;
		background-color: #d9534f !important;
		border-color: #d43f3a !important;
	}
	.btn-archive:hover .icon{
		color: white;
	}



	.@guid .select2 {
		display: block;
		width: 100% !important;
	}
	.@guid .select2-search__field{
		min-width:150px;
        width: 300px !important;
	}

	.@(guid) .milestone-table {
		width:100%;
		margin-bottom: 30px;

	}

	.@(guid) .modal-fa-panel-right.no-milestones {
		float: right;
		position: absolute;
		right: 0px;
		top: 5px;
	}

	.@(guid) .row-background{
	    background: #eaeaea;
		margin-top: -19px;
		margin-bottom: -15px;
	}


	.@(guid) .modal-fa-panel-left{
		padding-top: 10px;
	}

	.@(guid) .modal-fa-panel-left,.@(guid) .modal-fa-panel-right {
	    position: relative;
		min-height: 1px;
		padding-left: 15px;
		padding-right: 15px;
	}

	.@(guid) .modal-fa-panel-left {
		background: white;
	}
	.@(guid).modal-has-milestones .modal-fa-panel-left{
		box-shadow: 4px 0px 5px -3px rgba(0,0,0,.125), 1px 0px 2px -1px rgba(0,0,0,.125);
	}
	.@(guid) .modal-fa-panel-right.has-milestones	{
		box-shadow: 0px 2px 5px -4px black inset;
	}


	@@media (min-width: 992px){
		.@(guid).modal-has-milestones .modal-fa-panel-left,.@(guid).modal-has-milestones .modal-fa-panel-right {
			float: left;
		}
		.@(guid).modal-has-milestones .modal-fa-panel-left {
			width: 58.33333333%;
		}
		.@(guid).modal-has-milestones .modal-fa-panel-right{
			width: 41.66666666%;
		}
	}





	.@(guid) .milestone-section.disabled input{
		pointer-events: none;
		border: none;
		box-shadow: none;
		border-bottom: 1px solid lightgray;
		border-radius: 0;
	}

	.@(guid) .milestone-section.disabled .delete,
	.@(guid) .milestone-section.disabled .add-btn{
		display:none;
	}

	.@(guid) .milestone-section.disabled input[type='checkbox']:before{
		background-color: #9e9e9e69;
		width: calc(100% - 2px);
		height: calc(100% - 2px);
		display: inline-block;
		content: "";
		border-radius: 2px;
	}

	.@(guid) .milestone-table .checkbox{
		margin: 10px;
		top: 14px;
	}
	.@(guid) .ms-row{
		padding-bottom:4px;
	}

	.@(guid) .delete{
		font-family: monospace;
		padding: 3px 14px;
		top: 2px;
		position: relative;
		text-align: center;
		font-size: 18px;
		color: lightgray;
		left: -20px;
		cursor: pointer;
		font-weight: bold;
	}

	#modalMessage{
	    width: 50%;
		margin-bottom: 15px;
	}
</style>

<script>

	function a@(guid)() {
		$(".@guid .owner").select2({
			escapeMarkup: function (markup) { return markup; }, // let our custom formatter work
		});

		var select2 = $(".@guid .select-recur").select2({
								closeOnSelect: true,
			//allowClear: true,
			@(canEdit?"":"") //Intentionally allowing editing of meetings,
			placeholder:  "Not attached to any meetings..." ,
			escapeMarkup: function (markup) { return markup; }, // let our custom formatter work
			templateResult: function (d) {
									return "<div><div class='searchresult clearfix' data-value='" + d.id + "'>" + d.text + "</div></div>";
								},
			templateSelection: function (d, e) {
									if (d.disabled || d.readonly) {
					$(e).addClass("selected-disabled");
									}
									if (d.readonly) {
					$(e).addClass("selected-readonly");
									}

									return "<div class='searchresult searchresult-selected'>" + d.text + "</div>";
								}
							}).on("change", function (e) { });

					var select3 = $(".@guid .select-accountable").select2({
								closeOnSelect: true,
			allowClear: true,
			@*@(canEdit?"":"disabled:true,")*@
			placeholder:  "Select an owner..." ,
			escapeMarkup: function (markup) { return markup; }, // let our custom formatter work
			templateResult: function (d) {
				return "<div><div class='searchresult clearfix' data-value='" + d.id + "'>" + d.text + "</div></div>";
			},
			templateSelection: function (d) {
				return "<div class='searchresult searchresult-selected'>" + d.text + "</div>";
			}
		}).on("change", function (e) {});
	}
	setTimeout(function () {
		a@(guid)();
	}, 1);

</script>
